<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='annual_min_wages+ (Varias conexiones)' inline='true' name='federated.1srzefs1bwuz2r0zq6xdm0al0qnk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ppa_index' name='excel-direct.10g60rl15iotxk18kbb351ikt6hx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Usuario/Downloads/ppa_index.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ipc_total' name='excel-direct.1c3e0wk053a3y11febk2b0nug6dn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Usuario/Downloads/ipc_total.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='min_wages_euros' name='excel-direct.1kmwf9x1mlcia018ngopl1y9x3du'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Usuario/Downloads/min_wages_euros.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ipc_hicp' name='excel-direct.1wjcz6901e2mak1b8hf5h03rvtm3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Usuario/Documents/ipc_hicp.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='expenditure_unemployment' name='excel-direct.0qtdhpi0in0dzc171fqzx19g3y2p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Usuario/Downloads/expenditure_unemployment.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='unemployment_%_total_population' name='excel-direct.1fhyvef1myvyiq12qimgb1bn8t66'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Usuario/Downloads/unemployment_%_total_population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1wjcz6901e2mak1b8hf5h03rvtm3' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:C316:no:A1:C316:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='real' name='% change HICP' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1kmwf9x1mlcia018ngopl1y9x3du' name='min_wages_euros' table='[min_wages_euros$]' type='table'>
            <columns gridOrigin='A1:D332:no:A1:D332:0' header='yes' outcome='2'>
              <column datatype='string' name='COUNTRY' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='real' name='min_wage_euros' ordinal='2' />
              <column datatype='real' name='% annual change' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.1wjcz6901e2mak1b8hf5h03rvtm3' name='Hoja1' table='[Hoja1$]' type='table'>
            <columns gridOrigin='A1:C316:no:A1:C316:0' header='yes' outcome='6'>
              <column datatype='string' name='COUNTRY' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='real' name='% change HICP' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0qtdhpi0in0dzc171fqzx19g3y2p' name='expenditure_on_unemployment' table='[expenditure_on_unemployment$]' type='table'>
            <columns gridOrigin='A1:C294:no:A1:C294:0' header='yes' outcome='2'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='real' name='expenditure_on_unemployment (% of GDP)' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.1c3e0wk053a3y11febk2b0nug6dn' name='ipc' table='[ipc$]' type='table'>
            <columns gridOrigin='A1:D1261:no:A1:D1261:0' header='yes' outcome='6'>
              <column datatype='string' name='COUNTRY' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='string' name='Type of good' ordinal='2' />
              <column datatype='real' name='Annual Rate of Change' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.10g60rl15iotxk18kbb351ikt6hx' name='ppa_index' table='[ppa_index$]' type='table'>
            <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
              <column datatype='string' name='COUNTRY' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='real' name='PPA_Index' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.1fhyvef1myvyiq12qimgb1bn8t66' name='unemployment_%_total_population' table='[&apos;unemployment_%_total_population$&apos;]' type='table'>
            <columns gridOrigin='A1:C295:no:A1:C295:0' header='yes' outcome='2'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='real' name='unemployment_%_total_population' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[% annual change]' value='[min_wages_euros].[% annual change]' />
          <map key='[% change HICP]' value='[Hoja1].[% change HICP]' />
          <map key='[Annual Rate of Change]' value='[ipc].[Annual Rate of Change]' />
          <map key='[COUNTRY (Hoja1)]' value='[Hoja1].[COUNTRY]' />
          <map key='[COUNTRY (ipc)]' value='[ipc].[COUNTRY]' />
          <map key='[COUNTRY (ppa!index)]' value='[ppa_index].[COUNTRY]' />
          <map key='[COUNTRY]' value='[min_wages_euros].[COUNTRY]' />
          <map key='[Country (unemployment!%!total!population)]' value='[unemployment_%_total_population].[Country]' />
          <map key='[Country]' value='[expenditure_on_unemployment].[Country]' />
          <map key='[PPA_Index]' value='[ppa_index].[PPA_Index]' />
          <map key='[Type of good]' value='[ipc].[Type of good]' />
          <map key='[Year (Hoja1)]' value='[Hoja1].[Year]' />
          <map key='[Year (expenditure!on!unemployment)]' value='[expenditure_on_unemployment].[Year]' />
          <map key='[Year (ipc)]' value='[ipc].[Year]' />
          <map key='[Year (ppa!index)]' value='[ppa_index].[Year]' />
          <map key='[Year (unemployment!%!total!population)]' value='[unemployment_%_total_population].[Year]' />
          <map key='[Year]' value='[min_wages_euros].[Year]' />
          <map key='[expenditure_on_unemployment (% of GDP)]' value='[expenditure_on_unemployment].[expenditure_on_unemployment (% of GDP)]' />
          <map key='[min_wage_euros]' value='[min_wages_euros].[min_wage_euros]' />
          <map key='[unemployment_%_total_population]' value='[unemployment_%_total_population].[unemployment_%_total_population]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[min_wages_euros]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D332:no:A1:D332:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C316:no:A1:C316:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[expenditure_on_unemployment]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C294:no:A1:C294:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ipc]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1261:no:A1:D1261:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ppa_index]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C253:no:A1:C253:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[unemployment_%_total_population]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C295:no:A1:C295:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[min_wages_euros]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[min_wages_euros]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_wage_euros</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_wage_euros]</local-name>
            <parent-name>[min_wages_euros]</parent-name>
            <remote-alias>min_wage_euros</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% annual change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% annual change]</local-name>
            <parent-name>[min_wages_euros]</parent-name>
            <remote-alias>% annual change</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY (Hoja1)]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_38C0F30108554D308ED47B8E827FCCE3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Hoja1)]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_38C0F30108554D308ED47B8E827FCCE3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% change HICP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% change HICP]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>% change HICP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_38C0F30108554D308ED47B8E827FCCE3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[expenditure_on_unemployment]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenditure!on!unemployment_AB239DFAD4E847DD96445D920F53185E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (expenditure!on!unemployment)]</local-name>
            <parent-name>[expenditure_on_unemployment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenditure!on!unemployment_AB239DFAD4E847DD96445D920F53185E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expenditure_on_unemployment (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[expenditure_on_unemployment (% of GDP)]</local-name>
            <parent-name>[expenditure_on_unemployment]</parent-name>
            <remote-alias>expenditure_on_unemployment (% of GDP)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenditure!on!unemployment_AB239DFAD4E847DD96445D920F53185E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY (ipc)]</local-name>
            <parent-name>[ipc]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ipc_A1209BD3126D4267A087547A7F42271E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (ipc)]</local-name>
            <parent-name>[ipc]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ipc_A1209BD3126D4267A087547A7F42271E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of good</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of good]</local-name>
            <parent-name>[ipc]</parent-name>
            <remote-alias>Type of good</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ipc_A1209BD3126D4267A087547A7F42271E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Rate of Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual Rate of Change]</local-name>
            <parent-name>[ipc]</parent-name>
            <remote-alias>Annual Rate of Change</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ipc_A1209BD3126D4267A087547A7F42271E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY (ppa!index)]</local-name>
            <parent-name>[ppa_index]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ppa!index_F1B9CC14F8AA40509CFC60F3620D530E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (ppa!index)]</local-name>
            <parent-name>[ppa_index]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ppa!index_F1B9CC14F8AA40509CFC60F3620D530E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPA_Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPA_Index]</local-name>
            <parent-name>[ppa_index]</parent-name>
            <remote-alias>PPA_Index</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ppa!index_F1B9CC14F8AA40509CFC60F3620D530E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (unemployment!%!total!population)]</local-name>
            <parent-name>[unemployment_%_total_population]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment!%!total!population_0F6FC1066F2A49908220140D0FC7AF73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (unemployment!%!total!population)]</local-name>
            <parent-name>[unemployment_%_total_population]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment!%!total!population_0F6FC1066F2A49908220140D0FC7AF73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unemployment_%_total_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unemployment_%_total_population]</local-name>
            <parent-name>[unemployment_%_total_population]</parent-name>
            <remote-alias>unemployment_%_total_population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment!%!total!population_0F6FC1066F2A49908220140D0FC7AF73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% annual change]' role='dimension' type='ordinal' />
      <column datatype='real' name='[% change HICP]' role='measure' type='quantitative' />
      <column datatype='real' name='[Annual Rate of Change]' role='measure' type='quantitative' />
      <column datatype='string' name='[COUNTRY (Hoja1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='COUNTRY (ipc)1' datatype='string' name='[COUNTRY (ipc)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='COUNTRY (ppa!index)1' datatype='string' name='[COUNTRY (ppa!index)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='annual rate change HICP' datatype='real' name='[Calculation_699746843476045824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Type of good] = &apos;HICP&apos; THEN [Annual Rate of Change] END' />
      </column>
      <column caption='adjusted_wages_hicp' datatype='real' name='[Calculation_699746843477356545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[min_wage_euros] / (1 + [Calculation_699746843476045824])' />
      </column>
      <column caption='total_ipc_esencial' datatype='real' name='[Calculation_699746843765555217]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [COUNTRY], [Year] : SUM(&#13;&#10;    IF [Type of good] IN (&quot;FOOD&quot;, &quot;RENT&quot;, &quot;GAS&quot;, &quot;ELECTRICITY&quot;) &#13;&#10;    THEN [Annual Rate of Change] &#13;&#10;    END) }' />
      </column>
      <column caption='min_wage_adjusted_to_PPA' datatype='real' name='[Calculation_699746843848585235]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[min_wage_euros] / [PPA_Index] * 100' />
      </column>
      <column datatype='string' name='[Country (unemployment!%!total!population)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='PPA Index' datatype='real' name='[PPA_Index]' role='measure' type='quantitative' />
      <column caption='Type of good1' datatype='string' name='[Type of good]' role='dimension' type='nominal' />
      <column caption='Year (ipc)1' datatype='string' name='[Year (ipc)]' role='dimension' type='nominal' />
      <column caption='Year (ppa!index)1' datatype='string' name='[Year (ppa!index)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Year (unemployment!%!total!population)]' role='dimension' type='nominal' />
      <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='HICP' datatype='table' name='[__tableau_internal_object_id__].[Hoja1_38C0F30108554D308ED47B8E827FCCE3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='expenditure_on_unemployment' datatype='table' name='[__tableau_internal_object_id__].[expenditure!on!unemployment_AB239DFAD4E847DD96445D920F53185E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='essential_goods_inflation' datatype='table' name='[__tableau_internal_object_id__].[ipc_A1209BD3126D4267A087547A7F42271E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='min_wages_euros' datatype='table' name='[__tableau_internal_object_id__].[min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ppa_index' datatype='table' name='[__tableau_internal_object_id__].[ppa!index_F1B9CC14F8AA40509CFC60F3620D530E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='unemployment_%_total_population' datatype='table' name='[__tableau_internal_object_id__].[unemployment!%!total!population_0F6FC1066F2A49908220140D0FC7AF73]' role='measure' type='quantitative' />
      <column datatype='real' name='[expenditure_on_unemployment (% of GDP)]' role='measure' type='quantitative' />
      <column caption='Min Wage Euros' datatype='real' name='[min_wage_euros]' role='measure' type='quantitative' />
      <column caption='Unemployment % Total Population' datatype='real' name='[unemployment_%_total_population]' role='measure' type='quantitative' />
      <column-instance column='[% annual change]' derivation='Avg' name='[avg:% annual change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% change HICP]' derivation='Avg' name='[avg:% change HICP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual Rate of Change]' derivation='Avg' name='[avg:Annual Rate of Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_699746843476045824]' derivation='Avg' name='[avg:Calculation_699746843476045824:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_699746843477356545]' derivation='Avg' name='[avg:Calculation_699746843477356545:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_699746843765555217]' derivation='Avg' name='[avg:Calculation_699746843765555217:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_699746843848585235]' derivation='Avg' name='[avg:Calculation_699746843848585235:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PPA_Index]' derivation='Avg' name='[avg:PPA_Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[expenditure_on_unemployment (% of GDP)]' derivation='Avg' name='[avg:expenditure_on_unemployment (% of GDP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_wage_euros]' derivation='Avg' name='[avg:min_wage_euros:qk]' pivot='key' type='quantitative' />
      <column-instance column='[unemployment_%_total_population]' derivation='Avg' name='[avg:unemployment_%_total_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COUNTRY (ppa!index)]' derivation='None' name='[none:COUNTRY (ppa!index):nk]' pivot='key' type='nominal' />
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type of good]' derivation='None' name='[none:Type of good:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year (unemployment!%!total!population)]' derivation='None' name='[none:Year (unemployment!%!total!population):nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[% change HICP]' derivation='Sum' name='[sum:% change HICP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual Rate of Change]' derivation='Sum' name='[sum:Annual Rate of Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_699746843476045824]' derivation='Sum' name='[sum:Calculation_699746843476045824:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_699746843477356545]' derivation='Sum' name='[sum:Calculation_699746843477356545:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_699746843765555217]' derivation='Sum' name='[sum:Calculation_699746843765555217:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_wage_euros]' derivation='Sum' name='[sum:min_wage_euros:qk]' pivot='key' type='quantitative' />
      <column-instance column='[unemployment_%_total_population]' derivation='Sum' name='[sum:unemployment_%_total_population:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusiones (Country,Year (unemployment!%!total!population))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTRY:nk]' />
          <groupfilter function='level-members' level='[none:Year (unemployment!%!total!population):nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusiones (Country,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTRY:nk]' />
          <groupfilter function='level-members' level='[none:Year:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:\% change HICP:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:unemployment_\%_total_population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_electricity_ipc:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Electricity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Gas:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[med:annual_minimum_wage:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:\% change HICP:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:annual_minimum_wage:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Electricity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:min_wage_euros:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Calculation_699746843729285133:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:annual_rate_of_change_hicp:qk]&quot;</bucket>
            </map>
            <map to='#66b3c2'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:min_wage_euros:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_rent_ipc:qk]&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:expenditure_on_unemployment (\% of GDP):qk]&quot;</bucket>
            </map>
            <map to='#89c8cc'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:\% annual change:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:PPA_Index:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Annual Rate of Change:qk]&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Annual Rate of Change:qk]&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_unemployment_rate:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_minimum_wage:qk]&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Calculation_699746843477356545:qk]&quot;</bucket>
            </map>
            <map to='#deccf5'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_rate_of_change_hicp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_gas_ipc:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Calculation_699746843476045824:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Gas:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Rent:qk]&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Calculation_699746843476045824:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_harmonized_ipc:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Calculation_699746843729420302:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Calculation_699746843765555217:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Calculation_699746843848585235:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Food:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Rent:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Calculation_699746843477356545:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Calculation_699746843765555217:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:Food:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[sum:unemployment_\%_total_population:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1srzefs1bwuz2r0zq6xdm0al0qnk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type of good:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;FOOD&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;GAS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;ELECTRICITY&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;RENT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;HICP&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Type of good:nk]' type='palette'>
            <map to='#3b96b2'>
              <bucket>&quot;ELECTRICITY&quot;</bucket>
            </map>
            <map to='#a5db96'>
              <bucket>&quot;FOOD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HICP&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RENT&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;GAS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY (ppa!index):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY (ppa!index):nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2d5f8a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#2f6690'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#306d95'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#3484a5'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#358bab'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#3f9ab4'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#51a8bc'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#72bac6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#75bcc7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#97cfcf'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a3d6d2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#afddd5'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;2023&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;2022&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2019&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2011&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;2010&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;2012&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2024&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2025&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2013&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;España&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='HICP' id='Hoja1_38C0F30108554D308ED47B8E827FCCE3'>
            <properties context=''>
              <relation connection='excel-direct.1wjcz6901e2mak1b8hf5h03rvtm3' name='Hoja1' table='[Hoja1$]' type='table'>
                <columns gridOrigin='A1:C316:no:A1:C316:0' header='yes' outcome='6'>
                  <column datatype='string' name='COUNTRY' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='real' name='% change HICP' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='expenditure_on_unemployment' id='expenditure!on!unemployment_AB239DFAD4E847DD96445D920F53185E'>
            <properties context=''>
              <relation connection='excel-direct.0qtdhpi0in0dzc171fqzx19g3y2p' name='expenditure_on_unemployment' table='[expenditure_on_unemployment$]' type='table'>
                <columns gridOrigin='A1:C294:no:A1:C294:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='real' name='expenditure_on_unemployment (% of GDP)' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='essential_goods_inflation' id='ipc_A1209BD3126D4267A087547A7F42271E'>
            <properties context=''>
              <relation connection='excel-direct.1c3e0wk053a3y11febk2b0nug6dn' name='ipc' table='[ipc$]' type='table'>
                <columns gridOrigin='A1:D1261:no:A1:D1261:0' header='yes' outcome='6'>
                  <column datatype='string' name='COUNTRY' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='string' name='Type of good' ordinal='2' />
                  <column datatype='real' name='Annual Rate of Change' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='min_wages_euros' id='min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9'>
            <properties context=''>
              <relation connection='excel-direct.1kmwf9x1mlcia018ngopl1y9x3du' name='min_wages_euros' table='[min_wages_euros$]' type='table'>
                <columns gridOrigin='A1:D332:no:A1:D332:0' header='yes' outcome='2'>
                  <column datatype='string' name='COUNTRY' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='real' name='min_wage_euros' ordinal='2' />
                  <column datatype='real' name='% annual change' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ppa_index' id='ppa!index_F1B9CC14F8AA40509CFC60F3620D530E'>
            <properties context=''>
              <relation connection='excel-direct.10g60rl15iotxk18kbb351ikt6hx' name='ppa_index' table='[ppa_index$]' type='table'>
                <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
                  <column datatype='string' name='COUNTRY' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='real' name='PPA_Index' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='unemployment_%_total_population' id='unemployment!%!total!population_0F6FC1066F2A49908220140D0FC7AF73'>
            <properties context=''>
              <relation connection='excel-direct.1fhyvef1myvyiq12qimgb1bn8t66' name='unemployment_%_total_population' table='[&apos;unemployment_%_total_population$&apos;]' type='table'>
                <columns gridOrigin='A1:C295:no:A1:C295:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='real' name='unemployment_%_total_population' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[COUNTRY]' />
                <expression op='[COUNTRY (Hoja1)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (Hoja1)]' />
              </expression>
            </expression>
            <first-end-point object-id='min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9' />
            <second-end-point object-id='Hoja1_38C0F30108554D308ED47B8E827FCCE3' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[COUNTRY]' />
                <expression op='[Country]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (expenditure!on!unemployment)]' />
              </expression>
            </expression>
            <first-end-point object-id='min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9' />
            <second-end-point object-id='expenditure!on!unemployment_AB239DFAD4E847DD96445D920F53185E' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[COUNTRY]' />
                <expression op='[COUNTRY (ipc)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (ipc)]' />
              </expression>
            </expression>
            <first-end-point object-id='min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9' />
            <second-end-point object-id='ipc_A1209BD3126D4267A087547A7F42271E' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[COUNTRY]' />
                <expression op='[COUNTRY (ppa!index)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (ppa!index)]' />
              </expression>
            </expression>
            <first-end-point object-id='min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9' />
            <second-end-point object-id='ppa!index_F1B9CC14F8AA40509CFC60F3620D530E' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[COUNTRY]' />
                <expression op='[Country (unemployment!%!total!population)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (unemployment!%!total!population)]' />
              </expression>
            </expression>
            <first-end-point object-id='min!wages!euros_4394D94FCD914A6C8CB85D6F13E8FFF9' />
            <second-end-point object-id='unemployment!%!total!population_0F6FC1066F2A49908220140D0FC7AF73' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='salarios 15-24'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='9'>Minimum Wage Trends (2012-2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual_min_wages+ (Varias conexiones)' name='federated.1srzefs1bwuz2r0zq6xdm0al0qnk' />
          </datasources>
          <datasource-dependencies datasource='federated.1srzefs1bwuz2r0zq6xdm0al0qnk'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[min_wage_euros]' derivation='Avg' name='[avg:min_wage_euros:qk]' pivot='key' type='quantitative' />
            <column caption='Min Wage Euros' datatype='real' name='[min_wage_euros]' role='measure' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:Year:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2012&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2015&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2023&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:min_wage_euros:qk]' value='52' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:COUNTRY:nk]' value='Country Selected&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane id='28' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:Year:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;&#9;   </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:Year:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#555555'>Minimum Wage</run>
                <run>:</run>
                <run bold='true' fontcolor='#000000'><![CDATA[ <[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:min_wage_euros:qk]>€]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5162431001663208' />
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='mark-transparency' value='183' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:min_wage_euros:qk]</rows>
        <cols>([federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:COUNTRY:nk] / [federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:Year:nk])</cols>
      </table>
      <simple-id uuid='{BA8B317D-59D7-4BFF-8540-AD3628C15879}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='salarios 15-24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;2017&quot;</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[:Measure Names]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[attr:COUNTRY (annual!rate!of!change!hicp):nk]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:Annual Rate of Change:qk]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[avg:annual_rate_of_change_hicp:qk]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:% annual change:ok]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:COUNTRY (annual!rate!of!change!hicp):nk]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:COUNTRY:nk]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:Type of good:nk]</field>
            <field>[federated.1srzefs1bwuz2r0zq6xdm0al0qnk].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B13917E4-3171-4E4B-96C2-D9E9EAFFD80A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='PPA Index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wage Dashboard' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='combined' width='192'>
      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
      xRGpyW8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ipc esencial' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='min_wages_map' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='salario vs inflación' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='salarios 15-24' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dSWxkybrXf2fKeR7ttKtsl8tVPd7u2/e+p/tGeELAAgkWICGWLAAJwQKJ
      HRK6QkhI7EBiiViAEEIINiwe8IQuoPfu0Pf2VPPgMdPOdM7TycwzBguXM9PlcndX1+CuyvhJ
      pXREZX7nixPxPydOxHciFCGEQCJZUNTLdkAiuUxeSACDweCFHRgOh/i+/8J2XoYvL8OGEOJ7
      48toNMLzvNd6zJdh42XZ+TY2XkgAQghwLb786itu3380zW9Uq9j+ac/KZzg0v94GcO/2l9y6
      cxfbPRGD70yoNloX/m44HD7Tzqjf5s7de/SGk2f+zncdeoMh5nDI07I7teHZY+7eucNxs/tM
      G964S2toPdOPee7e/oLt3fL0OJ3us+2NRyauf7YnOt8z3X5wl/uPd3ne3qoQAiEEw26Tu/fu
      cdzsfOP3n/zB3uOHPHjwEPvb6+eMjaOjQzqNY8bOcxp4yo477lFvn20/426Tjmk983f1euOc
      DQA8i6PafHsSdDs99O/k3Ty+izmeoLuw+/Au+5VjisurCOOY4+MGRiBCQNWp16sIFIQzodXs
      EU2GyK28R/SJB+bIBDVItbxNJrdEvdnE86F5VMZCpxg32K31KGXjaJEknjNBrx5Qbo35g5/8
      aOpO+ajOe+++y7h1xKc7fTJhGJoTlldKPLx3j3yxSLXepri0xMayw29+8znrH/6ElUxkaqNR
      LVO69g6JgMeXn/4ZkUyR6mGVXLGAPRqxlI2x1xzTTCbQFZfmM/yAkytwKJ7j0Z0vIJyhdbjL
      1WtbtBvHqMEYmmcytBUK2QTpVJJbX37J2ns/ZjUXP2NnMBgSSUfZfnAPPZbGbFaw1DgBxlie
      Rj4VYewbKJMOlbrJH/7R752p2MPjJitLeYaWxWe//DmWFiEZ9EkVr1IqZM9VqWcNcPQIAUyG
      jX0eH9vEdZNqc8R6Kc1Bpc7V9StMbI+AsDk8bvLJT36feFCb2th5eA9VC7G0OiJbzNOq1Gj3
      +4SicYJY1LojfrB1hc+/uMva1nUGI5tIQCVsaORW1mbNy5swMAW7926RL2Y5rFRYLq0STms8
      vvUpyfwK/U6HUDRGWHWptAYUCvnz7VR4DIYjfC/O559+SiiZo1o5fDnPAMl0loAi6A1NlldK
      aAqMxxMymQye4+C6LiNzSKvTwwhGWMnmuLp5Fdt2pzai8RSxsIFl2TSbdSzbxfddjGAUFZ9O
      b4jvjFH1MGurJVzXpdsfYlvjM75EAirVeoPRaML65iae55OKhakd1YjFIniKQS6bQfgu9Xqd
      dDpGr3v2ChOJxjiuHjEYDPGNGIW4hhZKkI6H0IIxwqEAq+ubBHSB6zr0+ibOU36clClJNp0i
      k8nRa7fJ5gvEoiG0YARFuITjSYq5JK7r0Wo0SMSjdPvn75bheIobm2vowQhry0lMS2VsDogm
      MhRTSca2SzaTZDiasFIqnvt9SFMwbUG/3WDiCYr5DOF4muV8Btu2sW37zPdVI8io3wVnxMj2
      Wb9+nfFoQmm5iGmaLC0v4zkOmWwW0xxRXC5hKGePWSitsnGlhCJ82s0mo4lFtrhKLGTgoRIM
      6DQabRJhn64Jm5sbpCIGTdMhqD1lTMDylXU8a0RuqUTYUDH7bfRQjGGvS7a4QiwUwPEgGYs+
      s40CjEdDeq1j/ECU0dhhqZhHeZFRoH6/TyIeo9lsYIRixEI67Z5JMhHDdyd89tkXLK/dZKWY
      xp6M8BSDSCgAQqDpKp6vMhmbRKNRep0WvhogFY/Q7Q2IxWMoCO7d+hwvmObm2hIuGuFgECNg
      4Nj21GYyHj3xJZFACEG71SQaT6AbAfBs+sMJyViY7sAkHo8xGg4IhmMENOgNTWLROIGAPrUB
      gn63g6oHGA6HxJNpnPGQYDSBZ5moRhAjEATfQwhxxg8hxMlv4nE6rQau0IhFAtieQjSoY1oO
      mnBRAxGMJxUthEBVoD8YEo0nCBrzvoBt2wQCARzHQTd0eu02RjhKQD+54qoKdAcmiUiQvmmR
      yaRQANM0CQaDaJpKu9UiGk/hO2McoREJBdB1Hcs66UqEQqEzx7TGJoORTToZQ6gGwhnTNy1S
      iQjt7pBsJkmn0yMRj9IbmGQzaRRFmdqwbRtVAUVV6XZ7xKIxVE0DBId7D9k5Nvn9H3+IOZ4Q
      jsQIBHSalV28aJ7lTHxWn76L44EC6Bo0W11SqQQoKv1+n2g0iqae2PUci5Htk0klZu3zSXkQ
      Ps1mk2A4imNNiMTiePZ4JoDBYPDcfczRaEQkEvnmL34N4/GYUCiEoijf/OVX7MvLsAEnZQqH
      w5fui2VZGIaBqn67G/336Ry+Ll+mXcV4PP5137uQqcK+I4qiEI1Gv3UlvUpfXoYNIQSKonzn
      8/kyfTm9A+j6t3/U+z6cw5dp55tsyHkAyUIjBSBZaKQAJAuNFIBkoZECkCw0UgCShUYKQLLQ
      SAFIFppzMySjfof9wyMiiQJR1aTah6g6pjf2uVJIcnTcZOXaO2TjocvwVyJ5qZy7A4TjSSIB
      naAuaA1sNGEjlBClaJijwYQPfvAO3eMWnuc9d+iERPJ945wAqrv3qXYngEBXBY1WD2fS56DT
      JxtQuP3VXcLpJJqmvXD8jkRy2ZzrApWuvUfpNFEssnn97P/PhWpLJG888iFYstBIAUgWGikA
      yUIjBSBZaKQAJAuNFIBkoZECkCw0UgCShUYKQLLQnJsJnpg99g6OyC+v0G1U0SNJIqpLd+Jz
      JZ9g+6DG9Rs3COpSO5I3n3Ot2AjFWFnK0O+PuHr1CsN+j97QIuzZbFcb3NxaoVKu4/u+DIaT
      vPGcE8Co36I+8FgrZXi0vc+NG9fxPBfH89CEz2Q8QdF0FEWRwXCSN55zXSAhFJxRn2Y3gKbA
      UbXOylKO7tjnai7OfrnG2vqabPySt4JzAkhk8iQyJ6vrFnK5aX4sdfJ57dr6a3FMInkdyCdZ
      yUIjBSBZaKQAJAuNFIBkoZECkCw0UgCShUYKQLLQSAFIFppzAhC+R6Nex/F8+t0OE9vFnozo
      9ocI36PZbMsYIMlbw7mZ4PFoiBAOD+8/QNUNhF9HFS6+B62wQThkcFBTWFtOX4a/EslL5ZwA
      DMOg1R6wUsoynBhYZhMIE1EETV+wUSqyu9fF8xLyTvAG82/+y//lsD7buf73PrrGH3x49RI9
      uhzOCaDTOMYVAlcEMLuHhOJZdG9EeyxYLyS4c2eH9a2bcmnEN5y+OaYzGE3T44lzid5cHucE
      UFjdoPDk71wmNc1fefL5Yabw9E++Na7nYzvuN39RInlNfPsNZF8Cn90/4N/991+cyfuXf/+v
      vE4XJJIzyGFQyUIjBSBZaF5rF0gieVX85z/5jJ999miavlbK8nf/6m9/4++kACRvBUKIM8Py
      /rccopddIMlCIwUgWWikACQLzTMFYNs2IBiPTGzHxXVsxhMLIXxMcyRDICRvDecegq1Rn199
      eY+ffPwuDx4doKgqQdXDcgTJZBjP8wjEl7lSTF6GvxLJS+XcHSAYSVDIplAUFde1UVQFIxij
      GI8xcBU2rq1hD4dyn2DJW8E5AZj9Dq1Wi3q7RygQIBAIYagudcvhSirKnduPyC7nZTCc5K3g
      XBcomkjzu7/zuwCUSivT/NNA2VR++bU4JpG8DuQokGShkQKQLDQyFOIt4dbjw3Oh5v/0b/9F
      gsFLcugNQQrgLcHzBWNrMd/qehFkF0iy0EgBSBYaKQDJQiMFIFlopAAkC80zg+G+vL/Lb338
      AY8ePiCaKuCaLbpjwdVCgkqtwermO6SjcnxN8uZz7g4QCMdJxkJYZptWZ0S/38UVAZbCAcq9
      Ee9/eIN2tSmD4SRvBecEYI0GHB8fM7QEoZCO6zg41pCj3oCUAY8ebBNMxGUwnOSt4PzaoMEI
      v/Xj30LXDVLJFCgaqiJwfTB0Ddu2CQQCl+GrRPLSOScATdcJ6+cniAPayWdQzq1L3iLkKJBk
      oZECkCw0rywYbvTUKtABTWpN8v3jlQngX/y/r/DnRkn/xntrr+pQEsl3Rl6WJQuNfB9A8r1E
      AANnciYvrAXwfMHh3M42AFcS0e98nBcWwN1OFdv3punlcIJiJPGiZiVfwz/72RdYnj9N/7V3
      rnDRzMzAdukPZw1JUxRWk9+9wbwuPN9nt988k7eZyNEbe/zbuVWgAf7R77z3nY/z0u8AMjji
      1XPuHH/NSb9d7/DH29VpOmJo/JM//OiV+PUmcu4ZwPccdvcPALBHPSq1Fu1Gld2DQ+zxgPsP
      HmG7/jlDEsmbyLk7gOs49AcDhPDZLx/iKiHGeAQVeFwx2VwrUK402Liavwx/F4pHvToTbzac
      XAjFZPfyJXM+GjQUIRTQsYZd+uaEo9rxdPMBRYDv+aAoMhDuNeAKH2/uny87mC+dc3cAs9/B
      tmx6tsqPfvgxvb6JcMf0xj7Xc3F2yzU2rm1IAUjeCp65NOKHH6an6WQyDsQ53TH4xtbma3JN
      Inn1yIkwyUIjBSBZaKQAJAuNFIBkoZECkCw0UgCShUYKQLLQSAFIFppzAhC+R7VaQwifw4Nd
      as0O/XaDg6NjXGvM4+0dXF9OyUveDs4JwLEmHB6fxP+ksnla9SrVegd/0OPR/gHLxST7laZc
      FU7yVvCMpRGjxCMhFASVgwPWr22iqiqaqiIUlYChg+9LAUjeCp65T/B4PKZ6XMd1fZrNNplk
      BNsIsVkq8ni3xupqHlWVjw+SN59nBsN9/NFJMFxpuTTNzz75fPcdGY8ueXuQl3HJQiMFIFlo
      pAAkC40UgGShkQKQLDRSAJKFRgpAstBIAUgWmvPBcELQbrdBCOrVCn1zwqjf4ajewndtdvcO
      8GUYhOQt4dxMsD0e8nBnj0/e1xhMFFrdPRQgoMDDboNSIc1epcXGavYZ5iSSN4tzd4BgJE46
      EcX3PQKhMIahoRsGQcPAU3SisSjCdfFlQJzkLeCZwXDm0KQ3BntQJxLPEI8YmGhcW8py78EB
      pdW83CdY8lbwzGC4Tz45CYYr5jJPcrMUn/z1wfvpp38ikbyxyFEgyUIjBSBZaKQAJAuNFIBk
      oZECkCw0cptUyXem0x9x2OhO06qqsJr9/u9AOY8UgOQ7c3e3yn/440+naUPX+Od/5y9fokfP
      j+wCSRYaKQDJQnNhF8i1hnx56wF6OEpYceiPfUqFBM12l8KVGyxl3qy+nkTyLC68AyiKgi98
      wEcLxLiSitOceHzwg3cx2108z5PBcJI3ngvvAJ7nYRhBVEUHb8zhxGc1n+D2V/dZXr8pg+He
      UtrW6MyFLaIHCOvGJXr0arlQAIFwgo8//sG5/ELp6it1SHK5HJldXOFP06VI8q0WgHwIliw0
      UgCShUZOhL0A5tjij39+90zen//RFoHnvKz8p//5a3aOWtP0h5sl/txHay/DRck3sLACEEJw
      ZhDrOzzPjy2HP/n0wZm8H95cJZ8IPZedemdI+bgzTa/kk8/vjOQ7sbAC+G8/+5L/9av70/Rq
      IcU//Ou/e4keSS6DhRWA5Nvj+T4//dkXZ/L+5gcbl+TNy0UKQPKtOLcv4lsyBypHgSQLjRSA
      ZKG5sAskhM/e9mMCsQyKPaA79rlaSLBbOWZj6x1iIdl7krz5XNiKbbNDtd6joIdQXEFah71m
      j/ff22B3v0F4rSCD4SQvhf/4P359pi39zocbpKKv5wJ74VE0PUAyncIZmyAEjoBQQKNRb6GF
      4jIYTvLS+NOvtvHnnrI3V3Okoq9nAbYLBaCH4lxZtlGMKAHVZWgJMokwx402a4XUa3FOInnV
      fO19JpGarQAdDJ98LhULr9QhieR1IkeBJAuNFIBkoZECkCw0UgCShUYKQLLQSAFIFhopAMlC
      IwUgWWi+VgCeM6bZ7mP22xwdN6f7BHvngsMlkjeTr4kGFeztbDMhgubbJ/sE95qUihn2Dy93
      n2DP98+k1a+JSRJCnHt3Q0YwSU65UADWsE2jO8K0BqyVCgQVGPs+0WiERnt4qfsE/+N/9V+Z
      2O40/bf+0o/5ePPZIRp1c8K//uW9M3n/4LffeaX+XURtOOZOvTOXo/AXri1fii+SEy4UQCie
      5Se/naLR6iFsk+7Y59pSgnsPDrh+4/u3NKJAcDzqn8lLBSOX5M2zqQ3H/O/d2pk8KYDL5euD
      rhWNfC4DZDi9vn5f9wn2BVTHZwUQeouX9JO8GF9UWwxtV74UL1lM/rTc4GgwkgL4tvz7L7cp
      98xp+pPlLD+WC1g9F7+qNNjpDqfpYjTEH21cbhdQCuApXN/Dn3u4VxUFXdUYOy6mM3vwtjzv
      Mtx7I/B8H29uhWlFUTBUjUp/xK25FfDMdJw/uuTlhaQAnqJiduna42k6YYS4lshdokdvHvXJ
      gOPxYJoOqjrvppcu0aOLkQJ4BYxcm0r37GjP9UT+krxZbJqTIRPXmabDeoBsaLa9lxTAK8AX
      Ast3z+TJFTQuh4E9oedMpumU8M8IQMYCSRYaKQDJQvM1AhC06lW6gxETs0+j3UP4LodHVXk7
      l7w1XPgM4Hseih6ksr+LpqpoCDotjUwqxt5Rh42VzOv0UyJ5JVwoAEVV6TSPKV1do12vE1EE
      bV+QzqTo7fdfyz7BfcthPDf2bmgqmXDwlR5TslhcvE+wPWJgWuj9AdGgSnfis5FPcu/eHhtb
      rycY7v/s1fhFpTFNX01G+Xs/vvlKjylZLC5eGjEY4+MffjxNn05Yf5CSk0KSt4fvxTyALwSe
      fza0wFC1S/JGskh8LwTQnAypTWZT54aq8X5axslLXj1yHkCy0EgBSBYaKQDJQiMFIFlonksA
      vWaNW199RW9kvyp/JJLXynMJoNU1ef+DLZrV5qvyRyJ5rTyXAAKaz/7uAYFY9Ju/LJG8ATzX
      PMDK+ibD4YiYFIDkLUERTyLaBoPBcwe3jUYjbF058wJ0RA8QUnU+q7WZN7eRiuFbDg/L9TM2
      PtlaBkNj5M1eW9MUlaQRotwfUTdnb/PEAjo3swl+dWcfd255xM2VHPGwzkQ7639cD+IJhTv1
      7pn89/JJGs0+lcYsPxoOcGMlg29oZ97mCqg6MT3Aw1afwdxqdIVoiEIowG8elM/Y/sH1EkK4
      OPrZOKmUEaZnOex0ZqsiKMAnyxnu7dXoDGbvIRfScVayURxdwZ0/t1qAkKbzRa2DN3dy15JR
      VNfj/v7xmWP+cGuZviuozNnWVYWPimm+enzEcGxN81dySQqpMJYG/txiklE9QEDV+azaPmN7
      Mx3DHls8rsy6w5qq8INrRZSAwcibPSee1ud+z6Q5mh0zETTYysT5+e29M21v60qBaFBh8lQw
      QEIPYfuCe43emfwP8kmOGl2qzdm6UIlIiM1SCs/QsOfqM6jqRPUA95t9TMedCeC70O/3SSQS
      Z/KEEAghUFX1XD4wDaATQqAoCoPBgGg0eu77vu+fy3s6f97ms3zxfR9FUc4F7T1t+9SXZ9l4
      Ll8UBYRgOBwSj8dfenkusvP0OT/1ZWSaBINBdF2/0MY3HfOi+nz63L60c/g1vnyb+nzec/jC
      oRDOZMCde9vkllfxJiZr62soisJRuYKmuhy3euRLGyznThzZe/yA/tDE8wWljfeIPPHg8f07
      2Bis5lPYeoxcMoIz6dPqOtSO9jAiSd575zqqqmIN2tx5tI9QFMLROO/d2ARg0Dhiu9Zi9co1
      zG6TtfU1ACrlCq41pGdO2Nh6n0TEAAQP7txiOLYRaHzw8UdPSuRx58tbBOIZ4qogtb5GSFVp
      Vw5RE0G2d45IpjJcX19FVVXatTL71RYoCslMgY0rJ6sfHO3v0OqP2Lx5jcZRj7X1ZcClUm4w
      6NUZOyof/fBDNFUFPL78zec4QkEzQnz00fsnntgjbt1+QGZpBWGPubq+hqqqVMsVNN2n2uiQ
      W1pjpZBCURQOdh7SHQzxPEFx7R2SIc6Wfzhh4+b7JMIGvm/z1Wdf4aAQCEX4wQfvAmCbXe4+
      2qewfAVnPJjWZ6VcQcOm2elTWN2imDnpBu8+uk9/aOILuHL9fQJPzuLDe7fx1BDLqSgiliEd
      DTIZduiPfA4r+wSjSd67uYmqqox7De5uH6KoEIkmeWfrZK2U7nGF/XqXK2vXGLSbrK1fnZbH
      Hg/ojyy23v2AaFAHBPdufcVo4uArGh//6DSQ0+PW518RTueI4pNdXyOgqjTLFfRE4CXMAwhB
      MreEYvc5rM1uh/bEZP+ozY3NK4xGs26Mh0apsMTm9RLj8azbo2gBNlaLPHz4GMc7ve0LDg8e
      k8yvozG7jXmOzdLaOsvFFTQxC6ITwmfpyib9RplmZxZbZPY6dEyPK4X0mUV19WCU0nKJYiZ+
      Zsn3QCROPhHg8U55rjPgcv/2Nlvvv4s7mXUpHNth7doaq6tXcK25cvqC6ze22H/8gOHcsHG7
      UcXX4yTDBrPOjU8smaO0vEw8pJ9ZzTqRKWB4IyrVWVi4Y43ZO2hwY2ud8WjOF19lJb/E1s0r
      jOeOOXxS/tVimon1pPzCJ5FdYmV5mbAx3wwE6UIJf9zhqN6a5tqjIZXjPlsbK5hz9ekrOqXi
      MuvrS0wms3Or6kHWSlkePNzGnZ5bwcHuY3Kla6hirj4ti5XNDZYKqyj+rE0IISitbdKp7dHu
      zbqOg26bviUoZZNYjje1HQjHWS6VyCeizK8fHoolyUQ0tvcq03whXO7d2gHxAvR6vTPpWrX2
      jG/ZolZtTVONWkU82j0QnjcWrdZA9Pt94Xne9P9H/Y7oDsfnrNSqNeE/+du1R+LunTtiMLZF
      o9H41r5Yo55od80nKV9U9rdF+ehYDNttMXLcczZa1ZqwnlGiedujflvcufdA2K4nGo2W8H1f
      9Pv9C8t/SqdaE5NpyhfbD+6Keqsn2o2GcC8ojy+exhG1anPm7/GReLi9L4SwRKPRE8PhUDiO
      Myu/OSu/73vi4b3botUdimajIbwLjnkeS9Sq7WmqXi2L7b2ycGxTtDvmORvDTkv0x/Y5K/O2
      XWsobt++I0zLuaA+fVGrHp+zMe53RHcwnn6nvPtYVGoN0W80xcT3z/nSrNbE0568cBfIs0f8
      4ldfkC/kaLT6FJeKABxu36M+gmjQw3JiFJdOXqFstQesLGV5tLuLJjIUiycrON/+4lO0cBKr
      16aw+QHJKPjuhJ//4tfkCwXqzS6FJ7ZHnRaJ4irl7Yd4aORyuSf5NT5/cEg+E6c/tKa+3Pvq
      N4hADHfUI7l8g3Ty5JgD0yEdH7Gz3WH1ww84eeby+fTnPyeZzdM8PObjpSIBwBo0+NWtPYq5
      JL3BeGq7XW9QurrKwwcP0FSDbDY9K/8YooH58gt+/ctfkEhnaZZrfLRU5OT9NhvbC2K2jugN
      HN59Up6Lyl/bf8hh1yEehokdorh0sldDo9Xj6kqeB7s7KFaClSsnSzfe+/I3iOBJ+VOlk/L7
      3hihJWhX9zEtQerJMd3JgF/85jaFfJZWZzAt58HDW3TcAGHdwnZTFJdOytnuDFkupHi8u0co
      VCCTOukEffnZrwhFUwxbTa58+EPiIePCtjJoNMisrrH38AFCmdVnv1nhzk6DbCrCcORSXCo8
      aSu/RgsnZm0lBiAYjj2Sap+dapeNzOkruz6//LM/I50r0Dxq8MlSEQMYdWt8fv8Q7ac//elP
      v1PLByzLIhyJEg5oKKrBysoK4dBJlcZTSazJhEgsyVIhRyBworVYNEizO0TxBYVSEYRHIBAg
      mUhgOy7pXIFMKoGuqSiqRiQYQKgaK6urhENBFCAQiWG2G6iGTjiaIBmPYlkW0WQGDQcjGGZl
      ZZlg4KQykokElu2QyhbIppPougooBAyV0cRB0Q3yuQyubRMMhojHIrgCissl4tEIKqAHIxiK
      i26EWVkpEQye2I4l4jSP6+iaSiKTIxoOYts22UIea/x0+ZUT276gsFwiEYtw+iimYOEKFSMY
      IpNOYlsWoXDkmeWPJhI4lkU4Gme5mCcQOFkFOxELUW8PUDxBvlREVQS6rpNOp2blT52UX1EM
      hGMiVJ1AKEw6lcB+YjNoKKiaQWmuPhOpFOPRmFgiRTGfndZnNBKg3RuBgMJSAeG7BINBkrEY
      luuRyRdJJ2Joqoqq6YQDOoqqn2krwXiCfuMYPWAQiSdJxE7qM57KovgORjDCSmlpVs54DNt2
      SecLZFJxdO2kPg1dMLY9FMOgkE3jnNZnNIwnFIqlEvFoGIWT7q+G8+LPANawS7PvkMtlKJdn
      Q4K7j7ZJZvNEdJejuWGr/b190tkciYhCuzcbEtvZ3SefzzPptxhOTvqBrjXkuG1SyOWolA+m
      3x21jxl6OoV8nm5nNjzXqezghpJkUjEOykfT/O3tXXL5Au6oMxfGITg4qJDLF/DtMY532k91
      2T+okc/lqVcPp33G3uEeEyNONh3noHw4tX1c3kePpchnk7Ras3Uvdx89fkb5PfYOjsjnCjSq
      R8yeXhwOj1oU8nlG/d70GcCZDObKPzu3B9vbRNNZYkE4nFtrc2/35Nym4xqt7uzZYFp+sz0t
      v/Am1Bp9Cvk8g95sOHjca9IdQy6bplKuTPMfP3xMtlAgpFjUWrP++P7eAZlcjlhA0BvOnjt2
      9vbJ5wuYnQZj5+QsWmaXZt9+0lZm9TmsHzJWwxTyOTqtWX02D3YgkiKTDHNQqc5s7+6TL+Sx
      +i2G0+cOn3K5Si5fwBmbc+fWZb98TCGX4/hoVp+dyg5uMPniAgiEYxhMqJQrZHKz5f8KxQLH
      1UNqjQFLhdmeAoVCjqPDCs2eQyEXm+bnn5zwia+TiJxcGTQjQkhzKZfLpLIz2+FkBn/So1I5
      JJef7QyTyC8xatU4PKxSKM7WosznMxxWKgwtSMdD0/xcJkmlXEYEIoT101OhkUqGqZTLBBOp
      6TBZPF/EatepHB6RLxanNjKFAr16lcNqY3qLPi1//bT8xdPyq2SSUSrlMkY8wWz3Ap1EzKBc
      rhBJZaaVogeic+WfvYqaLxZo1o6o1rsUi7PVOYrFk3N73J6wVJgN/03Lb6vT8le8vCUAAANo
      SURBVCtakGgIDsoVkpnZdlfBaBLFGVKpHJLJz8750lKB6uEhx60RxcJsVexCPstRpUJn5JNL
      zzYkyWVTVMplHC34ZJQGAqH4XFuZnatoJo87aJ3UZ2GWnywUGTRrVI6Op90/mLWV8VxbAYVM
      Ok6lfIAWjU9Ho0AjlQhSLlcIJ1OcTi0kCkuM2rUXF4Bjj+gPxhiRBLY5G3nptNs4lkVpbYXG
      0WwEo9NqY1sWV9eXOD6cjTK0221sx6OQjtLpjwDw3Am9vokeiuGOZkuTW8M+5tginMgw7s+u
      XsNum4njkMguM2jPHbPdwXYclgtpWu3h3DE72J4gE9Tp27MrSafdxVM0wp7L6XiH2e0wcR1i
      6SJmZ+Z3v9PBcmyySyt06/Wzxzwt/+GpL4J2u4srVOLCZ3aNdum0+6AHMBxrOt51Ufm77Q62
      bbG0ukJrbnSo3e5gWxPWNlepHTyV7zgsFZLT8gvfptMZogXDiMl4dtcZDxmOJgRjKazBbGKp
      3WpjWxNWN1aoz01+tdttbNtmdSVP/XhWF512B9v1ycVC9J5Mfp20ldG5tjLudxnZNpFknlFv
      dkcbdtpYjk06X6LfbJw9puNRTMembQXEyTF9hZQK5nQozaPd6uOrBkHX4fQeZXZO2soLC0BV
      NXJLJcKKTaMzO2GaYXD9xk1qB7tY3mxQSg+GuHlzi73H28y/BRyMxNi6tsru7sG0MhRFJVNY
      Jmp41NuzbpSmaxSWr6LaA9r9WcPQDZ3SlU0mvWP6czOORijC1uYauzu7Z2Y5Q7EEm1cK7OzP
      bvWgEEtlWcnFOTg8PmO7uHIN12zSM8dn8q9ubNFvVDCtudlsw+D6zZvU9nex58ofTaa5upRi
      b+6WDirJbI58IkjluPnN5Td0rm3dpHG4z8SdnUXdCHLznZvsP37E/MqkgSfl39vZm3YBTmwX
      SQYVas1Zo1M1jfzSKoY/otmbNVLNCHDznXeo7GzjzM1OG8EwN7ausbe9c2boMRiJs7W2fKY+
      VVUlu7Ryvq3oGsXSOmLSpTMcTfN1w2B17Tpm+4jhxJ6zfdpW9ueOqRCOp7i2kmVnf9ZFBYVE
      JstSOky5Wp+zfdJWXvpM8PNy0UzwZfjyMmyIC2aCL8MX84KZ4Fd5zJdh43X6Il+IkSw0UgCS
      hUYKQLLQ/H8+jLJrSWmjiQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='scatter plot unemployment' width='192'>
      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
      p+zrYgChqfn/rZydHejSjU0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='unemployment-min_wage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='unemployment_expenditure' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAe1UlEQVR4nO3dV3Bk15nY8X/nHNCNnMMMMDmQk8ghRS65JLXK8pryk+zyrrZ2y6FcdpXt
      d9vlJ5cftvbNXpdtubTSSitpJS7FMKSYJ5GchJnBIIcGOqFzvtEPGIIcDsBBD3oANPr83vr2
      7dvnAvfrc8853z3HoOu6jiA0KON2F0AQtlNNA0BV1VoeThAeOVEDCA1NBIDQ0KoKAF3XqVTK
      KKq2+rpcLqOJdrRQp6oKALmcZ2EhxM2xOwAszEywuLhERREBINSnqgLAYndhQqW1tR2A5eUE
      lVKWWDyFqqqIHlWh3lQVAJnYAovxHLIsk0olaWkOouoGLBYzJpMJg8HwqMopCI+E4eEGwnTS
      6Sx+v++eraqqYjKZalQ0QXj0HjIA1iYCoP5pus5UKst0KkNF1Wh22jncEsBjs2530R4JEQDC
      KkXTODcTYjyZuWe73Wzim3v66PK4tqlkj44YBxBW3Ywn77v4AcqKyrmZENIuHOkXASCsurWc
      Wve9TEViKVfYwtJsDREAwqq8JH/1+7KyRSXZOiIAhFU+m+0r3/fuwoawCABh1aHWwLrvBR02
      Ot3OLSzN1hABIKzaF/RzvK2ZLw9nem1Wvj7Yi9m4+y6XqrpBdV2nWMhjsTmxWla6O8vlMja7
      HQOiG3Q30HWdcL7IdDqLpKo0OxwMB/3Yzbvz/1pVAEilPEvRBNlCkSMH96NIRc698T5/8K2X
      sCECQKg/VSbDOdCkEm3tnQCMXruK3Wkjky2IZLg69cn53/PqP/yObGUlxX3h5ocs5VbeK2WT
      JHLlbSzdo2euZudMLEQ4VaDHXSGRSLD/8HHmpmZwOWyYTCbxSGQdGh29jgkTb597lYmb4xzd
      105+vkwhNEXn4BCLM5McOHmG8MIsi0sxzAYzrV37+M43ntjuotdEVQHgb+vjbFsfoJPN5LDZ
      HQwfPPCIiiZsBbPZjBlIZfJYHB7cDiupYgVdk5FkFYfHxfWrV2jyN7HvyBEMRZl0Ir/dxa4Z
      kQsk3CcRnuPdDy5z9qVv0ea1b3dxHikRAEJD230du4JQBREAQkMTASA0NBEAQkMTASA0NBEA
      QkOrema4TDpJ+e6DE6oikUik0EQGhFCnqpwZrkCuUGZ8fBKATCpFuRBjNrT+o3SCsJNVnQxX
      zqfp6OoCwOW0k8qqdHf6RTKcUJeqTIZbJJ6tYPWUiSsVoqE5DDYnpbKEz2UTyXBC3XnomeFy
      uQIej/uerSIVQqg3IhdIaGiiG1RoaCIAhIYmAkBoaCIAhIYmAkBoaFWNAwjCdtB0nUi+SKRQ
      xGoy0e/z4LZaanJsEQDCjqZqGm/NLd4zbbvVZOSF/m4G/N5NH7/qZLhEPEaxLK0UTpGILyc3
      XQhBWM/1WOK+NQskVePN2RDFGsxWXV0yXKWArMHk5Eoy3PTEBFIhzkJs90yTIewsE6nsmtsl
      VWM+m9v08atLhrM6yCbjdPX0rmwwWens7qSSzYlkOOGR+KpVaaS7C7ZvRlUBkF1eJFWQKRSK
      xGIx3HYT165P0NLdKpZJFR6Jzq9Yl6wW07U/dDJcoVDE5bq3cCIXSKi1bEXil3dmyMv3rl5z
      uCXA13o6Nv2jK5LhhB0vW5H4NLpMOF/EZjIyHPBzoLkJYw3uOEQACA1NjAQLO5DOwuwUi9Hl
      R/5NYiBM2IFkXn3lFV783vf51U9/wvDho4yNz9HT6iCSyLNvZJCZcI6gtUwBN888eeKhv0nU
      AMKOpOs6BhSKqpns8iITl69yZylCR6uHcx9e4bGTx3n//Q+JJzdXS4g2gLADaUQiMdrbW4hE
      Eli0EnPhPO1dAVx2G0azhdtjU/S2uokWDBzdP/TQ3yQCQGho4hZIaGhVB0Ahl+OzwWm5UmRh
      MYJIgBDqVVUBoEglbly+ymfrBo6PT2DXs0wvrZ2wJAg7XVUBYLY66GxvWX1ts5hYWs7itBpF
      MpxQl6oaB5CKOZaW45TnvXitRixmC2azhsmIWCZVqEsPnQxXLJZxOh33bBW9QEK9Ed2gQkMT
      3aBCQxMBIDQ0EQBCQ1szAHRdJ52IMTUzh1SDJ+8FYadasxF85cJ7FHU7XreNaDjCoRNnaQ+4
      1/r8PUQjWKg3a9YAbqeDyNIsFm8nz7/wIm1N6z+YLAj1bM0ACMejNDe38dFbv2FmMSZmexB2
      rTVvgQrZNJFoDM1opq2tHe8Xpp/IpTM4/T5MgKbKzM+F6Orrx2IyiFsgoe6sWQMszY1zZ3qe
      uYlbzC59PvWhIpW4+emN1WS4ibFbaEYTmsgBEurU2rdA0Rh2ixGj1UE0PLe6fSUZrnn1dbEs
      43UaWQhFRDKcUJfWDIC9w4cY6u8imUwxMDi8ul0q5ggnl1mcXyIcDtPd2Uo4mqSpqUnMDCfU
      pTXbABcvnedgbzMhyUsyNMeTT5760h465XIFu91+z1bRBhDqzZrp0P1tAV794AYmXeboE8+v
      sYfhvotfEOrRmjWApq3Mums0VpcpIWoAod6sWQN8cv5dxucWGRneR3vPAN1twa0ulyBsiTVr
      AFWRmZwYQzNY6esfwGm3buhgogYQ6s2a9zgms4VYeJFCLsn1WxNbXSZB2DLr3uS7XU6Wl5N4
      /f6tLI8gbKn1H4nU9ZX5fgwGNtq7L26BhHqzZiO4kM8Tnp9gejFOS+cgxw/u2epyCcKWWPMW
      SCplmZtfJF+SaWn5vAdo5UGZJJ9PfqITj0bZ/FJlgrA91k6GC81jsDmwmU3IkrS6XZXLjN+4
      vZoMV86nuHbtNvJaBxGEOrBmAMiShKabeOLpZ2myq8TTBWAlGa699fMa4dbN26BVWE5mRDKc
      UJfWbAQnIvNc+uQ6JUmhvbufk48dwWIyIhVzXL1yg6aefpxm6OrsJBJaJNjdhQXRCBbqz0PP
      DFepSNhstnu2igAQ6s26AfDphXco4iDoD7J/38Z6gUQACPVm3YEwg9WNjRKyJnL8hd1r3QBY
      XprH4e+iu6ttK8sjCFtq3QDo6OggNDtFPCUWvxB2r3UDwO504nHbiEbjW1keQdhS6wZANp0k
      Gk3i9Xm3sjyCsKXWnhtU03D4W/n2t7+BVZfW2kUQdoW1k+HSES5evMTsXIijJ57Y6jIJdUbV
      dBayBfKSTJ/Pjcdm2e4ibdiaARCNxujt7iQaTxJbTtLZvHIbpOs6yVgcX1srZqBcyDK3GGNw
      zxAWo+gubUSSqvG/r05wPZpEB9wWM//s2F4OtNTHcyRrtwF0jfnFMDabmUr53mS42fEpKndf
      y6pOd4uNuVB6C4oq7EQXQjGu3b34AfKywt+MTqNo9ZEjvGYADB14jP7OFvr7epEqxdXtZquD
      lmDT6mtNLjO/rDDU4xfJcHVA03XiuSLxXLFm01nOZ/L3bcuUJdLl+mg7rrtM6vDevVy7Pc2B
      YydXt0nFHNFMisr8Eg6TTimbQteNZIsSPpdNLJO6gxUlmb986wpXFla6tY/3tPJvnj+Ow1rV
      Srn3aXM57tvmtJjx1kk7YN2zn55bYGRkGI/z8xkhrE4PJ594AtCRJBlrV9dWlFGogZ9/MsGl
      2ejq60uzEX7xyTg/fOLApo57treNTyMJ5jMrKfMmg4Hv7evFWic5YesGgFmrcP78BQ6deJKA
      z/Oldw1YrRubKkXYGW6Elu/ftnj/tmo5LWb+3ZlD3IilyFUkRpp9tH9hOv2dbt0AUDDSM9CL
      WhCpELtBq8fB9HLmnm0tntpcqBaTkcc66nPytHVHgpv8TUyP3cTmbV5vF6GOvHxiGPcX7ss9
      Ngsvnxj+ik+sLzR1m3C6gCTLKLKMoqi89/5byJKErKjIsoQkK6iKzNvvvFmrU3gk1q0BCvkc
      TcFWjKJ/f1cYaPbx33/wDBenw2AwcGagnaD7/gbsRiyH5xm//BGS9wCJa6+i+IfYP+Dn96/+
      nNHFCm5yGH0duPQ8aVnnuWdreio1tW4AZHJ5mpuDXP7gHM3BP6bFVz/3dcLamt0OvnlkcNPH
      sdmdeHwBRk4+xiep27TtPYZeijG7FKOzuRm/rxOLw0kmsoB7g9Nqbpd1nwibuHMLh8NBPFVg
      //592DfQXSaeCNs+U9feI2roxmvIsXfPXjCZuXDpI2yqQmDvUYbaAhSLJRx2K5KicPnieU6d
      Oo3BZAVVRjOYsBjh3Ltv8fzXnkPBiNNue/AX17n1H4l857f85sPb/PM/+wv6WjeWESoCYPtc
      eusXXI9a6PBr3LjwEbaOQ8iFEAf6h8hUJDLJArPzUwwfGqGp+zCuShxjJcO1xRJNuoQx2Iyb
      CsmKjFfL4d9zlm88c/LBX1zn1vxZL5WKtAwc4D+ceo75xShsMACE7eNw+3i6p4u3z19j7/7D
      9B86w+LEx1jsPo6OtHJ7dJ7W/n6aPQb2HD3C7Ogl5pajDHS04XM4MXttFONhymY7hwb2MbYY
      2+5T2hJr1gAff3yBPUEzy97jpGcuc+LEGWAlGS62FCbY1bmaDDcfSbBncACjoTFrAFnVGE+m
      yUsyA34vLU67WCutjqxZA1jUMq+8N41qmmD44NHV7apSITwbwn03AObmQ3R3+JldTDPQ5duq
      Mu8Yqqbz6/EZZtI5AD4MRfj+yAADflFj1os1A+Do6Wc5evrZ+3e22Ak0ff7PNZrMOFxOtJSE
      pmkNlwwXzhdWL34ARdO5tBQXAVBHqsqEkoo5YtkMlfkl7AaNZr+bG7dDjBw4iOnuSvGNZK2M
      Sk2vjzRgYcVDzwwnyyoWy73x02htAFnV+MnNCaKFEgAG4Bt7ejnYEtjeggkb9pABsLZGCwCA
      oqxwJbJMXpLZG/Ax4PeIRnAdEQEgNLTqFgJuYLquM3NnlAufjtJYTf3dTdQAG6QUo/zytxdp
      bW/FqGWI51T0UpS21g6m52OYjGbaOgaxkcRoNnJ9OkVvswtfey9aucAzXzu73acgrGFzz8M1
      EIPJRqmQZfxmkoocQXV20+K3sb+3lYrVi54pExm7wkw8THdfG01dpzGrUZaunuPgN/58u4sv
      rEPUAFUoFXKUZXA5zORLMk67FavZhKLp6DromkqpXMbhsIPBDGqZ3735Nt/77nc3vNKmsLVE
      AAgNTTSChYZWVQDomsL0xB3S+ZWBn1x6mdtj40iqGP0U6lNVAZCKhXAGuwiH5gEIhZZo8RgI
      xQoNlwck7A5VBYCmaVisNkx3nxM2m02kSwoWXW7IZDih/lUVAE0tnURnx/AGWpmfX8DrdlMp
      q3j9bkwmk0gBEOrOQyfDKYqG2Xxvj4/oBRLqzUP2Ahnuu/gFoR6JkeA6o2oaf3ttmvenw7R7
      nfzo9H46vWLKmmrl03FiGVmMA9SbSwtxfj06S6JY4WYkxV9fHNvuIu0ouq5TkhWkr3o4S6vw
      yj+8jctpEzVAvYlki/e+zhXX2bPx6LrOK+MLvDkVxmoy8oNDA5zqWmtqTx1VA7vNKmqAenOi
      pwX7F9pfTw20b2Npdpb5TIFfj82Tk2QSpQo/vjZJSVbu39Fo55tff5pQZFnUAPWm2+fiv/zR
      ST5eiNPhdXKyp2W7i7Rj5CUF7Qt9mpKqUVE1HGus1eFv6cTfIhrBdcdgMNDjd9Pjd293UXac
      oYCHAb+bmfTKsk0nOpvxPWClGpENusPMTY7S1L0fr/3Bf8c33n6DF597cQtKdb9SRaZYlgh4
      nTtqALQkK9yIprCZTRxs9WM2fvVdflU1gKbKTE9OEejoIeB1USnmmJlfpH9oGLtFNCdqYXF6
      DEvLCK+9+vc0W9wo5hxZzU9s7AKGYBfGRArFZsbi8iEXwszNxgk4VLKKHZvVQrvLwWT4DgeG
      DzA+H8fjDfDyd79e0zJ+PLbAf/vp7ymWZZ4/sZd/9Y+ewqirTE7N0BLwUcFFW/P6NZRczlPW
      bXjWujfZJIfFzKnujd8WVhUAqdginrZeYuEFAt4RJu7cwWh3Azq6rotcoBowGXTOf3gBXS6y
      kJLo7fdCUcXhdNE5OIDsa8XpNVMoFogrSWxuNxZjEYvRilnNsxCv0NTey5GRfqbDKaRK5cFf
      WqWfvnWFfGllFcg3L4/znbMHkaY/ZqziZV8xRTxv4vzyAsFgGx3dbUTnQ8RSWTpaPcTiafr7
      OpBsLcQmrnPkqRfpDjz8OMbc2MfYu47iM1UoK3D1ygWOHTmBy+OhmIqR1x3YjApNgeBqDtsX
      VRUAuq5jNpkx3q3yVIOZkcFOpmcX2TvU/dAnIXzu9AsvcxqAp7/0TnW3Oko5S7ffQVPf0Qfv
      XCXbF6bKNxoNWM1mAgceJ3n5HT6+Y8JWSdF76ixzV65w6YMP6Oxqo2Q2k5+IceL4UW5OTaOY
      02Rnp3H1JDYVAMnIPJ7gYcITF/jJG5/Q02aly2/nrYkEZpNOU3MvF3//txz/zl/wh8f67/t8
      VW0ATalw5844gY5eyrkMQZ+D2YUo/cP7cNvMog3QIGbCCf7yFx+QyhX57tOH+N5Thyjnk3x8
      fYJjRw6gY2ZibJRDx0+wMDfNUH8PFy9+Qv/QAB6Xi0KxhMFoJBQKMzg0jM9jf+iyjF18nasR
      Kw49RrZio7fNRmvvEc6/8Xe88PU/YvzGGLFSie6DZ3j6YO99n3/oZDhV1TGZ7r3vFwHQOFRN
      Q1V1LOaVayBeKpCVyrQ63XgsNq6Gk4wvZzjeGWS4efMTJ0+HE3wwOstQZ5An9vfVbOku0Qsk
      bFq8lOfacgQAs8GI2+DmLz+6haaD3WziP7/wOB2bWJEymS3yr//qN+RKFQwG+Pc/eIanDvXX
      pOyi60bYtKz0eUNb0TVGY8nVAamyorJ4dxHthxVO5siVVr5D12GiBusbf0YEgLBprQ73an+7
      22LluYEuPHcHoDo8TkZa/Js6/mBHgKHOlXWIXXYrZw/2ba7AXyBugTZJ13UihQKZSoV+nw+7
      +as71nRNQdYMWHfZ8xRlRaGoSHitNsxGE6lShcVskYEmNy7r5vv7ixWZidAynUEPLTUcBRcB
      sEmLuRzvhUIANDscPN/Xx/ToZe6EcgwNdhBPlRnu8lEy+XDqORJL05y7U+Afv/AEy+kUWi5J
      1/BRmr0Pt2ZvrSmahqSqOMzmHTXC+6iIXKBNSn9hoCkrSSiaxo1bs3zr5ZeRMxHGpm7zN++/
      hqu1kya7lz882UMwYOC9cx/g6vCgJ2Ncn1rmh//kW9t4FivS5QqvTc9SVBSOtbZwvK3lS0Gg
      8+uf/RjJ6ODJZ56nyW7hyuglhvadIp+I0N7ezlI4SldbkFxZIZtM0ORzolm9tDdv7DYoFZrk
      /WuT7NvTTjRmp6fTTKC1FbPVTqWQJRZP4lTjhIz9dFnKmLx+cqk0w3uHeJiOIREAmzTg8zGf
      zVKQZfYHAliMRs6cPMwbr7+NVcthdXdw6sTjmJq60TJhQhmNkYE+FH8Kqxtm0gX29HZt92kA
      MJVOU1RW0ofHkkkOtwSx3FOj60SiYUy2Jt54/Q1G/E0k/Uair79GU1BhdGGImfNv4m/y0HPm
      26gL00TsEhcmk/zHf/knGyqD2WpFKubIlfwkxj8hy2Ey77+H023H5Oll8ea7BLv6uTx9jR9+
      7QjZ5SSX3vgF8o/+E4c7ql/XWATAJjktFl4cGEDRNKxGIwaDgY7B/XxzcP8aex+8b8vxIyce
      fSE3qNXpxADorNzO3Z9IZqC9vQPZ6CTY5GchlKZ/cAir1cXY6HlKfj8Dwwdw2k0cHhlgUYoT
      Xpph356BDZdB1sDjsiMpJnr3H2YqvMCB089y8/y7nDnkQS4O0xII8rSvnbLJgZxLMXDgMPaH
      vJKrGwlWJSbHJwl09NLsX8kBmrwzwcDIMCYasw2w28QKRbKSRL/P+8BMys8kwvNc/PQWz770
      Ek5zfbUbqgqARHgGzdlOMjLPyMgI2USYq6NznH7mDBZNQ9M0zA/oBRGEnaS6q1UHDAa4O9n3
      /MIScjnDcjJDh99T+9LVEV3X+fmVKS7NRfn24QG+NtSxo3tRwjff4ZXrWZ5/8nHC89OYihGm
      1G7O7nGj2FtQMmHKRjdKJU+r10ZGdXB4ZOO3MvWiqgBoautiYnyCQHsPs7NzHDr2OF3Ly3gC
      PozQ0OnQi5kCP786habr/M+PbnF2oB2zaecGgFIpUpY1Krk4E1Mz7O3yMtLfy5XRUTRlnGyp
      QkvAgWpyoORMfHhjgsMj/2K7i11zVQWA0WRlZP9BQKfZt/KL39S81lP3jcfvsNHktJEolOkN
      uGuWrPWouFv6aPPNgclOW3MTHXsPMDm/REezCcU+RL8JHA4jCmZykRCHDh3a7iI/EmIgrIZi
      uRIT8TRHuoJ4bNbtLo6wASIAttFcOs/rUyH2Br0827ez2wy7leiy2YRP3/8teccIysIHdJ7+
      Y8hG8OgJriyWKSpOnjnShWJy0tUWXPPzr0+HmExlmUnnONYWpMlR/UCOsDkiG3QTMrkSsaUJ
      0skoi0tLvPXKL/l0PILFIFMxWJkcu8H//X9/t+7n9wa8mAwGur0u3DVIGBOqJ26BNuH6xx+Q
      Lki4bTop2UV2eYmO1la8HV2M3pjCQQbN6Oe7335+zc/ruk66LOGyWrCaxG/RdhABIDQ00QbY
      Am+/9itOnHma1969wslj+zEYK8RnFzH623DpOVKylWa7Sg43lkqaYkln5EAvec1Ld1BMff4o
      iRpgC/zuF/+LitFLJCvTHgyim9NIy2ZsQSvFQh6rrBAM+vh0JoYbje9//Qw/+c15/umf/SkB
      h/h7PkrVzQynSIyPjxNo76U14CUVD7MUTdC3Zx/uh03HawAjR8/Q1d3HxGyYeHgGX9s+HL12
      jHYj4ek73BhfpKeni1OP9xBw2mjpHaKl+TZNG5geUdicqmqA5aUZ8HSSCM8xMjyMoihkEwsU
      tCBdbW6RDPcQxkc/xdLUw0DX59P55RJhCgY37YH186vyZQmH1YxpjYzNQi6Pw+O+r4uvXChg
      sjuwiAb3qqquVoPBgKqqqzk/yegiZYOLnk7vyuP6QtWGDz123zZPsIOvSi0cW0rwX39znrPD
      Xfz5c8f48V//FQazhzNPf41EukhhIcTek/uYC6XpanKwuJzm4N5e/v7Hv+IP/vRP6PM+/ERU
      u011yXCtXUxNTNLS0cPMzCxmZPKlAlmfD5/LJkYyt0hFVilIMrm783OWSiVaunq5cPka7U4j
      qbIJ12KIc+9cYn9HJz2dVn72ygynD6/1kE5jE43gbRINzbBc0DkwPPDAHw5drZDKSgSaPq8X
      EvkSPocNs8nAjRvXOHz4GJM3P2UqWmCwtZV8JclsvMhQeytNPiOpnExoJsoTLz1Hk10Mun1G
      BMA2+dlP/w/dDih3HCe7NEOH18F8Io/NZmTP8EHm71ynuauHhbkIvSPdqAnIFkN07z/F/n6x
      LFKtiBbrNpHyGd6fKXPcNk1fdwsfvfEWR55+Ct1k4+on5ykmo0zHMhw9coql+DSV8RxJNUHS
      2ikCoIZEDbBNlpfj+JxWkgWF8FKYwZ5WdJMVDEZkqUwsEsPf3ILL5UZRyxgkncVomM6+AYJe
      sTxSrYgAqDP5koTTZtnxD9zUC9EhXEcKZYl/+z9e5cKdhe0uyq5RVQBoSoXbN0eJJbMAZBNR
      ro/eQtYeSdmEL3HYLPzopcc51Ne63UXZNaoKgGRsiZbevaTuzgUfWU5zcG87c/PxR1I44V5G
      g4HTIz14nWIgq1aqCoAvjwTruo6iKBg2OIGSIOw0Vc4MJzM1OUmwo4dMYpnWgIe5cJLh4b2Y
      jaIRLNSfmvUCaZqGqqoYRW0g1JGaDYQZDAYMBkNNA+BR1Ci1PuZOP56maav/m1qph3Pe6HVY
      0wAw3p0duVZqfbxHccx6OB6w48u4Xedc04EwQag3Nb9hjy3Nc+36DYoVZVPHUeUyVy5+QuXB
      u27Y4twU169doyTXJuaTsSVGb1wnns7X5HgAC5M3CS1na3Q0nasfX2Q2FKnR8SC9HOHmzTFK
      0ub+v5/JJKLcunmD25PzNTmeKuW5dvU6E9MbO17NAyBTKHNwsINIYnP/RIPRgs/lpJZjbB3d
      vdjNBtQaVXoerw9NllG12pSykk+Rr6jIklST46GVkBUTiizX5njA9MwM6DLlGgWAL9hGi99N
      a1ttBvc0RaYsKxRLpQ3tX/MAUGSZbL6AxbK55oXRZMJU43yX6YkJOgf34bbW5rQlFYYGukim
      avOLnc5kqRTzRKK1GVhUFQMjhw+RzyZrcjwAu91JX087y8nanLOu6yRyZQKe2gzuVfJpgp2D
      6HJ5Q/vXvA2gVIosRFL093ZuqmFTKWSYmlvE6Q3Q312b9N/56QkKFZWBPcPYLZsPgnwmwWIs
      zeDgQM2es9UUibICTvvmJ9fVdZ3Q7BTuYCdN3tpMr6LKFWYXwvT399XkB0rXZQpFDberNtNC
      6rrGwuw07mAHAa/rgfuLRrDQ0MSoldDQRAAIDU0EgLCr6LpOoVhEkcpUJPWB+4tngoVdRVcq
      nHvrPU7s8TJXaaHJImPzBnAbKySKOk1OE7HlBHa7DW9zhwgAYRe62zlVSoVIG4NI4x+QjMVw
      uluwuYwc7O8kWXYyfe2yCABhdzGYLbgtKtenkuw/MEAk56Qg+3FYTDS1DVDIJ3C5vahGF2rF
      JbpBhUYmiQAQGtv/B3r6umYuPDBJAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
